{"ast":null,"code":"var _jsxFileName = \"/Users/amandahelga/biobot-app/src/components/Search/Search.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Results from '../Results/Results';\nimport { getKitInfo, getKitInfoWithID } from '../../api/Api';\nimport { useEffect, useState } from 'react';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [kitData, setKitData] = useState([]);\n  const [idInput, setIdInput] = useState('');\n  const [suggestion, setSuggestion] = useState([]);\n  useEffect(() => {\n    getKitInfo().then(data => {\n      setKitData(data);\n    });\n  }, []);\n  const onChangeHandler = idinput => {\n    let matches = [];\n    if (idinput.length > 0) {\n      matches = kitData.filter(data => {\n        const regex = new RegExp(`${idInput}`, \"gi\");\n        return data.label_id.match(regex);\n      });\n    }\n    console.log('matches', matches);\n    setSuggestion(matches);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input search-input\",\n          type: \"text\",\n          value: idInput,\n          placeholder: \"Search Kit ID\",\n          onChange: e => onChangeHandler(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: idInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"2uUs7H1yb8fwBU0VIzN6xPgzqwg=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","Results","getKitInfo","getKitInfoWithID","useEffect","useState","Search","kitData","setKitData","idInput","setIdInput","suggestion","setSuggestion","then","data","onChangeHandler","idinput","matches","length","filter","regex","RegExp","label_id","match","console","log","e","target","value"],"sources":["/Users/amandahelga/biobot-app/src/components/Search/Search.js"],"sourcesContent":["import React from 'react';\nimport Results from '../Results/Results';\nimport {getKitInfo, getKitInfoWithID} from '../../api/Api';\nimport {useEffect, useState} from 'react';\n\nimport './Search.css';\n\nconst Search = () => {\n    const [kitData, setKitData] = useState([]);\n    const [idInput, setIdInput] = useState('');\n    const [suggestion, setSuggestion] = useState([]);\n    \n    useEffect(() => {\n        getKitInfo().then((data) => {\n          setKitData(data);\n        })\n      }, [])\n\n      const onChangeHandler = (idinput) =>{\n        let matches = [];\n        if(idinput.length > 0){\n            matches = kitData.filter((data)=>{\n                const regex = new RegExp(`${idInput}`, \"gi\");\n                return data.label_id.match(regex)\n            })\n        }\n        console.log('matches', matches);\n        setSuggestion(matches)\n      }\n\n    return (\n        <div className='search-container'>\n            <div className='search-box'>\n                    <label>\n                        <input className='input search-input' type='text' value={idInput} placeholder=\"Search Kit ID\" onChange={(e)=> onChangeHandler(e.target.value)} />\n                    </label>\n                <div>{idInput}</div>\n            </div>\n        </div>\n    );\n    }\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAAQC,UAAU,EAAEC,gBAAgB,QAAO,eAAe;AAC1D,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEzC,OAAO,cAAc;AAAC;AAEtB,MAAMC,MAAM,GAAG,MAAM;EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZF,UAAU,EAAE,CAACW,IAAI,CAAEC,IAAI,IAAK;MAC1BN,UAAU,CAACM,IAAI,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,eAAe,GAAIC,OAAO,IAAI;IAClC,IAAIC,OAAO,GAAG,EAAE;IAChB,IAAGD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAC;MAClBD,OAAO,GAAGV,OAAO,CAACY,MAAM,CAAEL,IAAI,IAAG;QAC7B,MAAMM,KAAK,GAAG,IAAIC,MAAM,CAAE,GAAEZ,OAAQ,EAAC,EAAE,IAAI,CAAC;QAC5C,OAAOK,IAAI,CAACQ,QAAQ,CAACC,KAAK,CAACH,KAAK,CAAC;MACrC,CAAC,CAAC;IACN;IACAI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAER,OAAO,CAAC;IAC/BL,aAAa,CAACK,OAAO,CAAC;EACxB,CAAC;EAEH,oBACI;IAAK,SAAS,EAAC,kBAAkB;IAAA,uBAC7B;MAAK,SAAS,EAAC,YAAY;MAAA,wBACnB;QAAA,uBACI;UAAO,SAAS,EAAC,oBAAoB;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAER,OAAQ;UAAC,WAAW,EAAC,eAAe;UAAC,QAAQ,EAAGiB,CAAC,IAAIX,eAAe,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC7I,eACZ;QAAA,UAAMnB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAClB;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAA,GAjCCH,MAAM;AAAA,KAANA,MAAM;AAmCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}