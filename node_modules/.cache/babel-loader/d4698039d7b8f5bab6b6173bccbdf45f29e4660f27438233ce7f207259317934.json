{"ast":null,"code":"var _jsxFileName = \"/Users/amandahelga/biobot-app/src/components/Search/Search.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Results from '../Results/Results';\nimport { getKitInfo, getKitInfoWithID } from '../../api/Api';\nimport { useEffect, useState } from 'react';\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [kitData, setKitData] = useState([]);\n  const [idInput, setIdInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchedKits, setSearchedKits] = useState([]);\n  useEffect(() => {\n    getKitInfo().then(data => {\n      setKitData(data);\n    });\n  }, []);\n  const onChangeHandler = idInput => {\n    let matches = [];\n    if (idInput.length > 0) {\n      matches = kitData.filter(data => {\n        const regex = new RegExp(`${idInput}`, \"gi\");\n        return data.label_id.match(regex);\n      });\n    }\n    setSuggestions(matches);\n    setIdInput(idInput);\n  };\n  const onSuggestHandler = idInput => {\n    setIdInput(idInput);\n    setSuggestions([]);\n  };\n  const onSubmitHandler = inputId => {\n    getKitInfoWithID(inputId).then(res => {\n      if (res && res.length > 0) {\n        setSearchedKits(searchedKits.concat(res));\n      }\n    }).catch(console.error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type in Kit ID\",\n        className: \"input search-input\",\n        value: idInput,\n        onChange: e => onChangeHandler(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: () => onSubmitHandler(this.inputId),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), suggestions && suggestions.map((suggestion, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete col-md-12 justify-conent-md-center\",\n      onClick: () => onSuggestHandler(suggestion.label_id),\n      children: suggestion.label_id\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)), searchedKits.length > 0( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: /*#__PURE__*/_jsxDEV(Results, {\n        searchResults: searchedKits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 18\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"8C9RBkcT2kW1MO5+ayno5tYkZwU=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","Results","getKitInfo","getKitInfoWithID","useEffect","useState","Search","kitData","setKitData","idInput","setIdInput","suggestions","setSuggestions","searchedKits","setSearchedKits","then","data","onChangeHandler","matches","length","filter","regex","RegExp","label_id","match","onSuggestHandler","onSubmitHandler","inputId","res","concat","catch","console","error","e","target","value","map","suggestion","i"],"sources":["/Users/amandahelga/biobot-app/src/components/Search/Search.js"],"sourcesContent":["import React from 'react';\nimport Results from '../Results/Results';\nimport {getKitInfo, getKitInfoWithID} from '../../api/Api';\nimport {useEffect, useState} from 'react';\n\nimport './Search.css';\n\nconst Search = () => {\n    const [kitData, setKitData] = useState([]);\n    const [idInput, setIdInput] = useState('');\n    const [suggestions, setSuggestions] = useState([]);\n    const [searchedKits, setSearchedKits] = useState([]);\n    \n    useEffect(() => {\n        getKitInfo().then((data) => {\n          setKitData(data);\n        })\n      }, [])\n\n      const onChangeHandler = (idInput) =>{\n        let matches = [];\n        if(idInput.length > 0){\n            matches = kitData.filter((data)=>{\n                const regex = new RegExp(`${idInput}`, \"gi\");\n                return data.label_id.match(regex)\n            })\n        }\n        setSuggestions(matches);\n        setIdInput(idInput)\n      }\n\n      const onSuggestHandler = (idInput) => {\n        setIdInput(idInput);\n        setSuggestions([]);\n      }\n\n      const onSubmitHandler = (inputId) => {\n        \n        getKitInfoWithID(inputId).then((res) => {\n            if(res && res.length > 0) {\n                setSearchedKits(searchedKits.concat(res));\n            }\n        }).catch(console.error);\n      }\n\n    return (\n        <div className='search-container'>\n            <div className='search-box'>\n                <input type=\"text\" placeholder=\"Type in Kit ID\" className='input search-input' value={idInput} onChange={e=> onChangeHandler(e.target.value)} />\n                <button className=\"submit-button\" onClick={() => onSubmitHandler(this.inputId)}>Submit</button>\n            </div>\n            {suggestions && suggestions.map((suggestion, i) => \n                <div key={i} className=\"autocomplete col-md-12 justify-conent-md-center\" onClick={() => onSuggestHandler(suggestion.label_id)}>{suggestion.label_id}</div>\n            )}\n            {searchedKits.length > 0\n                (<div className=\"result-container\">\n                    <Results searchResults={searchedKits}/>\n                </div>\n            )}\n        </div>\n    );\n    }\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}